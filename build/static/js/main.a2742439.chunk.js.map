{"version":3,"sources":["components/header/index.js","firebase.js","components/sidebar/NewFile.js","components/sidebar/index.js","components/filesView/FileItem.js","components/filesView/FileCard.js","components/filesView/FilesView.js","media/patience.jpg","App.js","reportWebVitals.js","index.js"],"names":["index","userPhoto","className","style","backgroundColor","src","alt","firebaseapp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","provider","GoogleAuthProvider","storage","db","firestore","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","palette","background","border","boxShadow","shadows","padding","spacing","NewFile","classes","useState","modalStyle","open","setOpen","file","setFile","uploading","setUploading","onClick","fontSize","Modal","onClose","aria-labelledby","aria-describedby","type","onChange","e","target","files","ref","name","put","then","snapshot","console","log","child","getDownloadURL","url","collection","add","timestamp","FieldValue","serverTimestamp","caption","fileUrl","size","_delegate","bytesTransferred","getMetadata","meta","monthNames","FileItem","id","fileDate","toDate","getDate","getMonth","getFullYear","href","download","fileSizeInBytes","i","Math","max","toFixed","getReadableFileSizeString","FileCard","FilesView","setFiles","useEffect","onSnapshot","docs","map","doc","item","data","slice","App","user","setUser","photoURL","Patience","height","signOut","catch","err","alert","message","signInWithPopup","result","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2742439.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../../styles/Header.css';\r\n\r\nconst index = ({ userPhoto }) => {\r\n\treturn (\r\n\t\t<div className='header' style={{ backgroundColor: '#c1bac2' }}>\r\n\t\t\t<div className='header__logo'>\r\n\t\t\t\t<span>Extra Drive</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='header__icons'>\r\n\t\t\t\t<img src={userPhoto} alt='User Pic' />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default index;\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: 'AIzaSyDJlAjvIxzYUy-sr86ua9uGQ1LiRFYPjwg',\r\n\tauthDomain: 'drive-clonelive.firebaseapp.com',\r\n\tprojectId: 'drive-clonelive',\r\n\tstorageBucket: 'drive-clonelive.appspot.com',\r\n\tmessagingSenderId: '566249519521',\r\n\tappId: '1:566249519521:web:743d77a27418b7a814b3e0',\r\n};\r\n\r\nconst firebaseapp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nconst storage = firebase.storage();\r\nconst db = firebaseapp.firestore();\r\n\r\nexport { auth, provider, storage, db };\r\n","import React, { useState } from 'react';\r\nimport '../../styles/NewFile.css';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport firebase from 'firebase';\r\nimport { storage, db } from '../../firebase';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nfunction getModalStyle() {\r\n\treturn {\r\n\t\ttop: `50%`,\r\n\t\tleft: `50%`,\r\n\t\ttransform: `translate(-50%, -50%)`,\r\n\t};\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tposition: 'absolute',\r\n\t\twidth: 400,\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tborder: '2px solid #000',\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\tpadding: theme.spacing(2, 4, 3),\r\n\t},\r\n}));\r\n\r\nconst NewFile = () => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [modalStyle] = useState(getModalStyle);\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [file, setFile] = useState(null);\r\n\tconst [uploading, setUploading] = useState(false);\r\n\r\n\tconst handleOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tif (e.target.files[0]) {\r\n\t\t\tsetFile(e.target.files[0]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleUpload = () => {\r\n\t\tsetUploading(true);\r\n\r\n\t\tstorage\r\n\t\t\t.ref(`files/${file.name}`)\r\n\t\t\t.put(file)\r\n\t\t\t.then((snapshot) => {\r\n\t\t\t\tconsole.log(snapshot);\r\n\r\n\t\t\t\tstorage\r\n\t\t\t\t\t.ref('files')\r\n\t\t\t\t\t.child(file.name)\r\n\t\t\t\t\t.getDownloadURL()\r\n\t\t\t\t\t.then((url) => {\r\n\t\t\t\t\t\t//post image inside the db\r\n\r\n\t\t\t\t\t\tdb.collection('myFiles').add({\r\n\t\t\t\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n\t\t\t\t\t\t\tcaption: file.name,\r\n\t\t\t\t\t\t\tfileUrl: url,\r\n\t\t\t\t\t\t\tsize: snapshot._delegate.bytesTransferred,\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tsetUploading(false);\r\n\t\t\t\t\t\tsetOpen(false);\r\n\t\t\t\t\t\tsetFile(null);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tstorage\r\n\t\t\t\t\t.ref('files')\r\n\t\t\t\t\t.child(file.name)\r\n\t\t\t\t\t.getMetadata()\r\n\t\t\t\t\t.then((meta) => {\r\n\t\t\t\t\t\tconsole.log(meta.size);\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='newFile'>\r\n\t\t\t<div className='newFile__container' onClick={handleOpen}>\r\n\t\t\t\t<AddIcon fontSize='large' />\r\n\t\t\t\t<p>New</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<Modal\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\taria-labelledby='simple-modal-title'\r\n\t\t\t\taria-describedby='simple-modal-description'>\r\n\t\t\t\t<div style={modalStyle} className={classes.paper}>\r\n\t\t\t\t\t<p>Select files you wnat to upload!</p>\r\n\t\t\t\t\t{uploading ? (\r\n\t\t\t\t\t\t<p> uploading... </p>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<input type='file' onChange={handleChange} />\r\n\t\t\t\t\t\t\t<button onClick={handleUpload}>Upload</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewFile;\r\n","import React from 'react';\r\nimport '../../styles/Sidebar.css';\r\nimport NewFile from './NewFile';\r\n\r\nconst index = () => {\r\n\treturn (\r\n\t\t<div className='sideBar'>\r\n\t\t\t<NewFile />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default index;\r\n","import React from 'react';\r\nimport '../../styles/FileItem.css';\r\n\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\n\r\nconst monthNames = [\r\n\t'Jan',\r\n\t'Feb',\r\n\t'Mar',\r\n\t'Apr',\r\n\t'May',\r\n\t'Jun',\r\n\t'Jul',\r\n\t'Aug',\r\n\t'Sep',\r\n\t'Oct',\r\n\t'Nov',\r\n\t'Dec',\r\n];\r\n\r\nconst FileItem = ({ id, caption, timestamp, fileUrl, size }) => {\r\n\tconst fileDate = `${timestamp?.toDate().getDate()} ${\r\n\t\tmonthNames[timestamp?.toDate().getMonth() + 1]\r\n\t} ${timestamp?.toDate().getFullYear()}`;\r\n\r\n\tconst getReadableFileSizeString = (fileSizeInBytes) => {\r\n\t\tlet i = -1;\r\n\t\tconst byteUnits = [' kB', ' MB', ' GB', ' TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\t\tdo {\r\n\t\t\tfileSizeInBytes = fileSizeInBytes / 1024;\r\n\t\t\ti++;\r\n\t\t} while (fileSizeInBytes > 1024);\r\n\r\n\t\treturn Math.max(fileSizeInBytes, 0.1).toFixed(1) + byteUnits[i];\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='fileItem'>\r\n\t\t\t<a href={fileUrl} target='_blank' download>\r\n\t\t\t\t<div className='fileItem--left'>\r\n\t\t\t\t\t<InsertDriveFileIcon />\r\n\t\t\t\t\t<p>{caption}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='fileItem--right'>\r\n\t\t\t\t\t<p>{fileDate}</p>\r\n\t\t\t\t\t<p>{getReadableFileSizeString(size)}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FileItem;\r\n","import React from 'react';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\n\r\nconst FileCard = ({ name }) => {\r\n\treturn (\r\n\t\t<div className='fileCard'>\r\n\t\t\t<div className='fileCard--top'>\r\n\t\t\t\t<InsertDriveFileIcon style={{ fontSize: 130 }} />\r\n\t\t\t</div>\r\n\t\t\t<div className='fileCard--bottom'>\r\n\t\t\t\t<p>{name}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FileCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../../styles/FilesView.css';\r\n\r\nimport FileItem from './FileItem';\r\nimport FileCard from './FileCard';\r\n\r\nimport { db } from '../../firebase';\r\n\r\nconst FilesView = () => {\r\n\tconst [files, setFiles] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tdb.collection('myFiles').onSnapshot((snapshot) => {\r\n\t\t\tsetFiles(\r\n\t\t\t\tsnapshot.docs.map((doc) => ({\r\n\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\titem: doc.data(),\r\n\t\t\t\t}))\r\n\t\t\t);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconsole.log(files);\r\n\r\n\treturn (\r\n\t\t<div className='fileView'>\r\n\t\t\t<div className='fileView__row'>\r\n\t\t\t\t{files.slice(0, 5).map(({ id, item }) => (\r\n\t\t\t\t\t<FileCard name={item.caption} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<div className='fileView__titles'>\r\n\t\t\t\t<div className='fileView__titles--left'>\r\n\t\t\t\t\t<p>Name</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='fileView__titles--right'>\r\n\t\t\t\t\t<p>Last modified</p>\r\n\t\t\t\t\t<p>File size</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{files.map(({ id, item }) => (\r\n\t\t\t\t<FileItem\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tcaption={item.caption}\r\n\t\t\t\t\ttimestamp={item.timestamp}\r\n\t\t\t\t\tfileUrl={item.fileUrl}\r\n\t\t\t\t\tsize={item.size}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FilesView;\r\n","export default __webpack_public_path__ + \"static/media/patience.6f668632.jpg\";","import { useState } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport SideBar from './components/sidebar/index';\nimport FilesView from './components/filesView/FilesView';\n\nimport Patience from './media/patience.jpg';\nimport { auth, provider } from './firebase';\n\nfunction App() {\n\tconst [user, setUser] = useState();\n\n\tconst handleLogin = () => {\n\t\tif (!user) {\n\t\t\tauth\n\t\t\t\t.signInWithPopup(provider)\n\t\t\t\t.then((result) => {\n\t\t\t\t\tsetUser(result.user);\n\t\t\t\t\tconsole.log(result.user);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\talert(error.message);\n\t\t\t\t});\n\t\t} else if (user) {\n\t\t\tauth\n\t\t\t\t.signOut()\n\t\t\t\t.then(() => {\n\t\t\t\t\tsetUser(null);\n\t\t\t\t})\n\t\t\t\t.catch((err) => alert(err.message));\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t{user ? (\n\t\t\t\t<>\n\t\t\t\t\t<Header userPhoto={user.photoURL} />\n\t\t\t\t\t<div className='app__main'>\n\t\t\t\t\t\t<SideBar />\n\t\t\t\t\t\t<FilesView />\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<div className='app__login'>\n\t\t\t\t\t<img src={Patience} alt='Patience' style={{ height: '200px' }} />\n\t\t\t\t\t<button onClick={handleLogin}>Log into Drive</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{/* header */}\n\n\t\t\t{/* auth = true */}\n\t\t\t{/* sidebar \n            filesview\n            sideicons */}\n\t\t\t{/* no auth */}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}